---
import type { Post } from '~/types'
import { formatDate } from '~/utils'
import PostCategory from './PostCategory.astro'

interface Props {
  post: Post
}

const { post } = Astro.props
const { translate: t } = Astro.locals

const categoryList = post.data.categories ?? []

function formatDateCustom(date: Date) {
  return {
    title: post.data.title,
    href: `/posts/${post.id}/`,
    date: formatDate(post.data.pubDate, 'MMM D'), // Updated format
  }
}
---

<header flex="~ col gap-2">
  <h1 class="post-title">
    <a class="not-prose" href={`/posts/${post.id}/`}>
      {post.data.pin && <span class="text-3.5 p-0.3 color-zinc-5 bg-zinc:15 text-zinc5 rounded">Pin</span>}
      {post.data.title}
    </a>
  </h1>
  <div class="text-3.5">
    <!-- <span>{t(post.data.modDate ? 'updated_at' : 'posted_at')}</span> -->
    <time class="opacity-50">{formatDate(post.data.modDate ?? post.data.pubDate, 'MMM D')}</time>
    {categoryList.map((category) => <span class="text-3.9 m-l-3 p-1 bg-sky:10 rounded" >{category}</span>)}
  </div>
</header>
